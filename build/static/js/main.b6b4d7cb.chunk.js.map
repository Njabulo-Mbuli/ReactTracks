{"version":3,"sources":["withRoot.js","components/Track/SearchTracks.js","components/Shared/AudioPlayer.js","components/Track/LikeTrack.js","components/Track/DeleteTrack.js","components/Shared/Error.js","components/Track/UpdateTrack.js","components/Track/TrackList.js","components/Track/CreateTrack.js","pages/App.js","components/Shared/Loading.js","pages/Profile.js","components/Auth/Signout.js","components/Shared/Header.js","Root.js","serviceWorker.js","components/Auth/Login.js","components/Auth/Register.js","components/Auth/index.js","index.js"],"names":["theme","createMuiTheme","palette","primary","light","indigo","main","dark","secondary","orange","typography","useNextVariants","withRoot","Component","props","SEARCH_TRACKS_QUERY","gql","withStyles","root","padding","margin","spacing","unit","display","alignItems","classes","setSearchResults","useState","searchTerm","setSearchTerm","inputEl","useRef","clearSearchInput","current","focus","client","onSubmit","event","a","async","preventDefault","query","variables","search","res","data","tracks","handleSubmit","className","elevation","onClick","disabled","onChange","target","value","fullWidth","inputRef","placeholder","InputProps","disableUnderline","AudioPlayer","url","height","width","controls","CREATE_LIKE_MUTATION","iconButton","color","icon","marginLeft","trackId","likeCount","currentUser","useContext","UserContext","handleDisableLikedTrack","trackBool","likeSet","map","track","id","mutation","refetchQueries","ME_QUERY","createLike","stopPropagation","DELETE_TRACK_MUTATION","DeleteTrack","postedBy","GET_TRACKS_QUERY","deleteTrack","snackbar","error","open","setOpen","message","action","size","UPDATE_TRACK_MUTATION","container","flexWrap","dialog","maxWidth","textField","cancel","save","button","input","title","setTitle","description","setDescription","file","setFile","submitting","setSubmitting","fileError","setFileError","isCurrentUser","handleAudioUpload","FormData","append","axios","post","console","onCompleted","updateTrack","loading","uploadedUrl","label","TextField","multiline","rows","required","type","accept","selectedFile","files","name","handleAudioChange","htmlFor","variant","component","trim","details","link","textDecoration","key","expandIcon","likes","length","primaryTypographyProps","to","username","CREATE_TRACK_MUTATION","fab","position","bottom","right","zIndex","createTrack","searchResults","textAlign","progress","PROFILE_QUERY","paper","marginRight","marginTop","marginBottom","breakpoints","up","card","justifyContent","audioIcon","fontSize","thumbIcon","divider","userId","match","params","avatar","user","subheader","format","dateJoined","audio","trackSet","index","cursor","buttonIcon","localStorage","removeItem","writeData","isLoggedIn","log","handleSignout","buttonText","flexGrow","grow","logo","faceIcon","noWrap","React","createContext","fetchPolicy","me","Provider","Switch","Route","exact","path","App","Profile","Boolean","window","location","hostname","LOGIN_MUTATION","flexDirection","backgroundColor","form","submit","setNewUser","setUsername","password","setPassword","tokenAuth","called","setItem","token","Transition","direction","REGISTER_MUTATION","openTitle","verticalAlign","email","setEmail","createUser","disableBackdropClick","TransitionComponent","newUser","ApolloClient","uri","fetchOptions","credentials","request","operation","getItem","setContext","headers","Authorization","clientState","defaults","IS_LOGGED_IN_QUERY","ReactDOM","render","Auth","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b6b4d7cb.chunk.js","sourcesContent":["import React from \"react\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport indigo from \"@material-ui/core/colors/indigo\";\nimport orange from \"@material-ui/core/colors/orange\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: indigo[500],\n      main: indigo[700],\n      dark: indigo[900]\n    },\n    secondary: {\n      light: orange[300],\n      main: orange[500],\n      dark: orange[700]\n    }\n  },\n  typography: {\n    useNextVariants: true\n  }\n});\n\nfunction withRoot(Component) {\n  function WithRoot(props) {\n    // MuiThemeProvider makes the theme available down the React tree\n    // thanks to React context.\n    return (\n      <MuiThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        {/* https://material-ui.com/getting-started/usage/#cssbaseline */}\n        <CssBaseline />\n        <Component {...props} />\n      </MuiThemeProvider>\n    );\n  }\n\n  return WithRoot;\n}\n\nexport default withRoot;\n","import React,{useState,useRef} from \"react\";\nimport {ApolloConsumer} from 'react-apollo'\nimport {gql} from 'apollo-boost'\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst SearchTracks = ({ classes,setSearchResults }) => {\n  const [searchTerm,setSearchTerm] = useState(\"\")\n  const inputEl = useRef()\n\n\n  const clearSearchInput=()=>{\n    setSearchResults([])\n    setSearchTerm(\"\")\n    inputEl.current.focus()\n  }\n\n  const handleSubmit = async (event,client)=>{\n    event.preventDefault()\n\n    const res = await client.query({\n      query: SEARCH_TRACKS_QUERY,\n      variables:{\n        search:searchTerm\n      }\n    })\n    setSearchResults(res.data.tracks)\n  }\n  return(\n    <ApolloConsumer>\n      {(client)=>(\n        <form onSubmit={(event)=>handleSubmit(event,client)}>\n          <Paper className={classes.root} elevation={1}>\n            <IconButton onClick={clearSearchInput} disabled={!searchTerm}>\n              { searchTerm && <ClearIcon/>}\n            </IconButton>\n            <TextField\n              onChange={(event)=>setSearchTerm(event.target.value)}\n              fullWidth\n              value={searchTerm}\n              inputRef={inputEl}\n              placeholder='Search All Tracks'\n              InputProps={{\n                disableUnderline:true\n              }}/>\n              <IconButton>\n                <SearchIcon/>\n              </IconButton>\n          </Paper>\n        </form>\n      )}\n    </ApolloConsumer>\n  )\n};\n\nconst SEARCH_TRACKS_QUERY = gql`\nquery($search:String){\n  tracks(search:$search){\n    id\n    title\n    description\n    url\n    likes{\n      id\n    }\n    postedBy{\n      id\n      username\n    }\n  }\n}\n`\n\nconst styles = theme => ({\n  root: {\n    padding: \"2px 4px\",\n    margin: theme.spacing.unit,\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n});\n\nexport default withStyles(styles)(SearchTracks);\n","import React from \"react\";\nimport ReactPlayer from 'react-player'\n\nconst AudioPlayer = ({url}) => (\n    <div>\n        <ReactPlayer url={url} height=\"30px\" width =\"300px\" controls={true}/>\n    </div>\n)\n\nexport default AudioPlayer;\n","import React, { useContext } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\nimport { Mutation } from \"react-apollo\";\nimport {gql} from 'apollo-boost'\n\nimport {UserContext} from '../../Root'\nimport {ME_QUERY} from '../../Root'\n\nconst LikeTrack = ({ classes,trackId,likeCount }) => {\n  const currentUser = useContext(UserContext)\n  \n  const handleDisableLikedTrack=()=>{\n    let trackBool = false\n    const userLikes =  currentUser.likeSet\n\n    const isTrackLiked = userLikes.map(({track})=>{\n      \n      if(track.id == trackId){\n        trackBool = true\n      }\n    })\n    \n    return trackBool\n  }\n  \n  return (\n    <Mutation\n      mutation={CREATE_LIKE_MUTATION}\n      variables={{trackId:trackId}}\n      refetchQueries={()=>[{query: ME_QUERY }]}\n      >\n        {(createLike)=>(\n          <IconButton\n            disabled={handleDisableLikedTrack()} \n            onClick={event=>{\n              event.stopPropagation()\n              createLike()\n            }}\n            className={classes.iconButton}>\n            {likeCount}\n            <ThumbUpIcon className={classes.icon}/>\n          </IconButton>\n        )}\n      </Mutation>\n  )\n};\n\nconst CREATE_LIKE_MUTATION = gql`\n  mutation($trackId:Int!){\n    createLike(trackId:$trackId){\n      track{\n        id\n        likes{\n          id\n        }\n      }\n    }\n  }\n`\n\nconst styles = theme => ({\n  iconButton: {\n    color: \"deeppink\"\n  },\n  icon: {\n    marginLeft: theme.spacing.unit / 2\n  }\n});\n\nexport default withStyles(styles)(LikeTrack);","import React,{useContext} from \"react\";\nimport {Mutation} from 'react-apollo'\nimport {gql} from 'apollo-boost'\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TrashIcon from \"@material-ui/icons/DeleteForeverOutlined\";\n\nimport {UserContext} from '../../Root'\nimport { GET_TRACKS_QUERY } from \"../../pages/App\";\n\nconst DeleteTrack = ({ track }) => {\n  const currentUser = useContext(UserContext)\n  const isCurrentUser = currentUser.id === track.postedBy.id\n  return isCurrentUser && (\n    <Mutation \n    mutation={DELETE_TRACK_MUTATION}\n    variables={{trackId:track.id}}\n    refetchQueries={()=>[{query:GET_TRACKS_QUERY}]}>\n      {\n        deleteTrack => (\n          <IconButton onClick={deleteTrack}>\n            <TrashIcon/>\n          </IconButton>\n        )\n      }\n    </Mutation>\n  )\n};\n\nconst DELETE_TRACK_MUTATION = gql`\n  mutation($trackId:Int!){\n    deleteTrack(trackId:$trackId){\n      trackId\n    }\n  }\n`\n\nexport default DeleteTrack;\n","import React,{useState} from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nconst Error = ({ classes,error }) => {\n  const [open,setOpen] = useState(true)\n\n  return (\n    <Snackbar\n      open={open}\n      className={classes.snackbar}\n      message={error.message}\n      action={\n        <Button onClick={()=>setOpen(false)} color=\"secondary\" size=\"small\">\n          Close\n        </Button>\n      }/>\n  )\n};\n\nconst styles = theme => ({\n  snackbar: {\n    margin: theme.spacing.unit\n  }\n});\n\nexport default withStyles(styles)(Error);","import React, { useState,useContext } from \"react\";\nimport { Mutation } from 'react-apollo'\nimport {gql} from 'apollo-boost'\nimport axios from 'axios'\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport LibraryMusicIcon from \"@material-ui/icons/LibraryMusic\";\n\nimport Error from '../Shared/Error'\nimport { GET_TRACKS_QUERY } from '../../pages/App'\n\nimport { UserContext } from '../../Root'\n\nconst UpdateTrack = ({ classes,track }) => {\n\n  const currentUser =  useContext(UserContext)\n   \n  const [open,setOpen] = useState(false)\n  const [title,setTitle] = useState(track.title)\n  const [description,setDescription] = useState(track.description)\n  const [file,setFile] = useState()\n  const [submitting,setSubmitting] = useState(false)\n  const [fileError,setFileError] = useState(\"\")\n\n  const isCurrentUser = currentUser.id === track.postedBy.id\n\n  const handleAudioChange = (event) =>{\n    const selectedFile = event.target.files[0]\n    const fileSizeLimit = 10000000;//10mb\n\n    if(selectedFile && selectedFile.size > fileSizeLimit){\n      setFileError(`${selectedFile.name}: FILE SIZE IS TOO LARGE`)\n    }else{\n      setFile(selectedFile)\n      setFileError(\"\")\n    }\n  }\n\n  const handleAudioUpload = async () =>{\n    try{\n      const data = new FormData()\n      data.append('file',file)\n      data.append('resource_type','raw')\n      data.append('upload_preset','react-tracks')\n      data.append('cloud_name','njabulombuli')\n\n      const res = await axios.post('https://api.cloudinary.com/v1_1/njabulombuli/raw/upload',data)\n      \n      return res.data.url\n    }catch(err){\n      console.error('Error uploading file',err)\n      setSubmitting(false)\n    }\n  }\n\n  const handleSubmit = async (event,updateTrack) =>{\n    event.preventDefault()\n    setSubmitting(true)\n\n    //UPload our audio file\n    const uploadedUrl = await handleAudioUpload()\n    \n    updateTrack({\n      variables:{\n        trackId:track.id,\n        title,\n        description,\n        url:uploadedUrl\n      }\n    })\n  }\n\n  return isCurrentUser &&  (\n    <>\n    {/* Update Track Button */}\n    <IconButton onClick={()=>setOpen(true)}>\n      <EditIcon/>\n    </IconButton>\n\n    {/* Update Track Dialog */}\n    <Mutation \n     mutation={UPDATE_TRACK_MUTATION}\n     onCompleted={(data)=>{\n        setSubmitting(false)\n        setOpen(false)\n        setTitle(\"\")\n        setDescription(\"\")\n        setFile(\"\")\n      }}\n      //refetchQueries={()=>[{query:GET_TRACKS_QUERY}]}\n      >\n      {(updateTrack,{loading,error})=>{\n        if(error) return <Error error={error}/>\n\n        return(\n          <Dialog \n            className={classes.dialog}\n            open={open}>\n              <form onSubmit={event =>handleSubmit(event,updateTrack)}>\n                <DialogTitle>\n                  Update Track\n                </DialogTitle>\n                <DialogContent>\n                  <DialogContentText>\n                    Add a Title, Description & Audio File (under 10MB)\n                  </DialogContentText>\n                  <FormControl fullWidth>\n                    <TextField\n                      value={title}\n                      label=\"Title\"\n                      placeholder=\"Add Title\"\n                      onChange={event=>setTitle(event.target.value)}\n                      className={classes.TextField}/>\n                  </FormControl>\n                  <FormControl fullWidth>\n                    <TextField\n                      value={description}\n                      multiline\n                      rows=\"2\"\n                      label=\"Description\"\n                      onChange={event=>setDescription(event.target.value)}\n                      placeholder=\"Add Description\"\n                      className={classes.TextField}/>\n                  </FormControl>\n                  <FormControl error={!!fileError}>\n                    <input\n                      required\n                      id=\"audio\"\n                      type=\"file\"\n                      accept=\"audio/*\"\n                      onChange={ event =>handleAudioChange(event)}\n                      className={classes.input}\n                      />\n                      <label htmlFor=\"audio\">\n                        <Button\n                        variant=\"outlined\"\n                        color={ file ? \"secondary\" :\"inherit\" }\n                        component=\"span\"\n                        className={classes.button}>\n                          Audio File\n                          <LibraryMusicIcon className={classes.icon}/>\n                        </Button>\n                        {file && file.name }\n                        <FormHelperText>\n                          {fileError}\n                        </FormHelperText>\n                      </label>\n                  </FormControl>\n                </DialogContent>\n                <DialogActions>\n                  <Button\n                    disabled={submitting}\n                    className={classes.cancel}\n                    onClick={()=>setOpen(false)}>\n                    Cancel\n                  </Button>\n                  <Button\n                  type=\"submit\"\n                  disabled={submitting}\n                  disabled={\n                    submitting || \n                    !title.trim() ||\n                    !description.trim() ||\n                    !file\n                  }\n                  className={classes.save}>\n                    {submitting ?\n                      <CircularProgress className={classes.save} size={24}/>:\n                      \"Update Track\"\n                    }\n                  </Button>\n                </DialogActions>\n              </form>\n          </Dialog>\n        )\n      }}\n    </Mutation>\n    \n    </>\n  )\n};\n\nconst UPDATE_TRACK_MUTATION =gql`\nmutation($trackId:Int!, $title:String, $url:String){\n  updateTrack(trackId: $trackId, title:$title,url:$url,description:$description){\n    track{\n      id\n      title\n      description\n      url \n      likes{\n        id\n      }\n      postedBy{\n        id\n        username\n      }\n    }\n  }\n}\n`\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  dialog: {\n    margin: \"0 auto\",\n    maxWidth: 550\n  },\n  textField: {\n    margin: theme.spacing.unit\n  },\n  cancel: {\n    color: \"red\"\n  },\n  save: {\n    color: \"green\"\n  },\n  button: {\n    margin: theme.spacing.unit * 2\n  },\n  icon: {\n    marginLeft: theme.spacing.unit\n  },\n  input: {\n    display: \"none\"\n  }\n});\n\nexport default withStyles(styles)(UpdateTrack);\n","import React from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelActions from \"@material-ui/core/ExpansionPanelActions\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nimport AudioPlayer from '../Shared/AudioPlayer'\nimport LikeTrack from './LikeTrack'\nimport DeleteTrack from './DeleteTrack'\nimport UpdateTrack from './UpdateTrack'\nimport Link from \"react-router-dom/Link\";\n\nconst TrackList = ({ classes,tracks }) => (\n  <List>\n    {\n      tracks.map(track=>{\n        return(\n          <ExpansionPanel key={track.id}>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon/>}>\n              <ListItem className={classes.root}>\n                <LikeTrack trackId={track.id} likeCount={track.likes.length}/>\n                <ListItemText\n                  primaryTypographyProps={{\n                    variant:\"subheading\",\n                    color:\"primary\"\n                  }}\n                  primary={track.title}\n                  secondary={\n                  <Link className={classes.link} to={`/profile/${track.postedBy.id}`}>\n                    {track.postedBy.username}\n                  </Link>\n                  }\n                />\n                <AudioPlayer url={track.url}/>\n              </ListItem>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails className={classes.details}>\n                  <Typography variant=\"body1\">\n                    {track.description}\n                  </Typography>\n            </ExpansionPanelDetails>\n            <ExpansionPanelActions>\n              <UpdateTrack track={track}/>\n              <DeleteTrack track={track}/>\n            </ExpansionPanelActions>\n          </ExpansionPanel>\n        )\n      })\n    }\n  </List>\n)\n\nconst styles = {\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  details: {\n    alignItems: \"center\"\n  },\n  link: {\n    color: \"#424242\",\n    textDecoration: \"none\",\n    \"&:hover\": {\n      color: \"black\"\n    }\n  }\n};\n\nexport default withStyles(styles)(TrackList);\n","import React, { useState } from \"react\";\nimport { Mutation } from 'react-apollo'\nimport {gql} from 'apollo-boost'\nimport axios from 'axios'\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport LibraryMusicIcon from \"@material-ui/icons/LibraryMusic\";\nimport Error from '../Shared/Error'\nimport { GET_TRACKS_QUERY } from '../../pages/App'\n\nconst CreateTrack = ({ classes }) => {\n  \n  const [open,setOpen] = useState(false)\n  const [title,setTitle] = useState(\"\")\n  const [description,setDescription] = useState(\"\")\n  const [file,setFile] = useState(\"\")\n  const [submitting,setSubmitting] = useState(false)\n  const [fileError,setFileError] = useState(\"\")\n\n  const handleAudioChange = (event) =>{\n    const selectedFile = event.target.files[0]\n    const fileSizeLimit = 10000000;//10mb\n\n    if(selectedFile && selectedFile.size > fileSizeLimit){\n      setFileError(`${selectedFile.name}: FILE SIZE IS TOO LARGE`)\n    }else{\n      setFile(selectedFile)\n      setFileError(\"\")\n    }\n  }\n\n  const handleAudioUpload= async ()=>{\n    try{\n      const data = new FormData()\n      data.append('file',file)\n      data.append('resource_type','raw')\n      data.append('upload_preset','react-tracks')\n      data.append('cloud_name','njabulombuli')\n\n      const res = await axios.post('https://api.cloudinary.com/v1_1/njabulombuli/raw/upload',data)\n      \n      return res.data.url\n    }catch(err){\n      console.error('Error uploading file',err)\n      setSubmitting(false)\n    }\n  }\n\n  const handleSubmit = async (event,createTrack) =>{\n    event.preventDefault()\n    setSubmitting(true)\n\n    //UPload our audio file\n    const uploadedUrl = await handleAudioUpload()\n    \n    createTrack({\n      variables:{\n        title,\n        description,\n        url:uploadedUrl\n      }\n    })\n  }\n\n  return (\n    <>\n    {/* CreateTrack Button */}\n    <Button \n      variant=\"fab\"\n      className={classes.fab}\n      color=\"secondary\"\n      onClick={()=>setOpen(true)}>\n      {open ? <ClearIcon/> : <AddIcon/>}\n    </Button>\n\n    {/* CreateTrack Dialog */}\n    <Mutation \n     mutation={CREATE_TRACK_MUTATION}\n     onCompleted={(data)=>{\n        setSubmitting(false)\n        setOpen(false)\n        setTitle(\"\")\n        setDescription(\"\")\n        setFile(\"\")\n      }}\n      refetchQueries={()=>[{query:GET_TRACKS_QUERY}]}>\n      {(createTrack,{loading,error})=>{\n        if(error) return <Error error={error}/>\n\n        return(\n          <Dialog \n            className={classes.dialog}\n            open={open}>\n              <form onSubmit={event =>handleSubmit(event,createTrack)}>\n                <DialogTitle>\n                  Create Track\n                </DialogTitle>\n                <DialogContent>\n                  <DialogContentText>\n                    Add a Title, Description & Audio File (under 10MB)\n                  </DialogContentText>\n                  <FormControl fullWidth>\n                    <TextField\n                      value={title}\n                      label=\"Title\"\n                      placeholder=\"Add Title\"\n                      onChange={event=>setTitle(event.target.value)}\n                      className={classes.TextField}/>\n                  </FormControl>\n                  <FormControl fullWidth>\n                    <TextField\n                      value={description}\n                      multiline\n                      rows=\"2\"\n                      label=\"Description\"\n                      onChange={event=>setDescription(event.target.value)}\n                      placeholder=\"Add Description\"\n                      className={classes.TextField}/>\n                  </FormControl>\n                  <FormControl error={!!fileError}>\n                    <input\n                      required\n                      id=\"audio\"\n                      type=\"file\"\n                      accept=\"audio/*\"\n                      onChange={ event =>handleAudioChange(event)}\n                      className={classes.input}\n                      />\n                      <label htmlFor=\"audio\">\n                        <Button\n                        variant=\"outlined\"\n                        color={ file ? \"secondary\" :\"inherit\" }\n                        component=\"span\"\n                        className={classes.button}>\n                          Audio File\n                          <LibraryMusicIcon className={classes.icon}/>\n                        </Button>\n                        {file && file.name }\n                        <FormHelperText>\n                          {fileError}\n                        </FormHelperText>\n                      </label>\n                  </FormControl>\n                </DialogContent>\n                <DialogActions>\n                  <Button\n                    disabled={submitting}\n                    className={classes.cancel}\n                    onClick={()=>setOpen(false)}>\n                    Cancel\n                  </Button>\n                  <Button\n                  type=\"submit\"\n                  disabled={submitting}\n                  disabled={\n                    submitting || \n                    !title.trim() ||\n                    !description.trim() ||\n                    !file\n                  }\n                  className={classes.save}>\n                    {submitting ?\n                      <CircularProgress className={classes.save} size={24}/>:\n                      \"Add Track\"\n                    }\n                  </Button>\n                </DialogActions>\n              </form>\n          </Dialog>\n        )\n      }}\n    </Mutation>\n    \n    </>\n  )\n};\n\nconst CREATE_TRACK_MUTATION = gql`\nmutation($title:String!,$description:String!,$url:String!){\n  createTrack(title:$title,description:$description,url:$url){\n    track{\n      id\n      title\n      description\n      url\n    }\n  }\n}\n`\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  dialog: {\n    margin: \"0 auto\",\n    maxWidth: 550\n  },\n  textField: {\n    margin: theme.spacing.unit\n  },\n  cancel: {\n    color: \"red\"\n  },\n  save: {\n    color: \"green\"\n  },\n  button: {\n    margin: theme.spacing.unit * 2\n  },\n  icon: {\n    marginLeft: theme.spacing.unit\n  },\n  input: {\n    display: \"none\"\n  },\n  fab: {\n    position: \"fixed\",\n    bottom: theme.spacing.unit * 2,\n    right: theme.spacing.unit * 2,\n    zIndex: \"200\"\n  }\n});\n\nexport default withStyles(styles)(CreateTrack);","import React,{useState} from \"react\";\nimport {Query} from 'react-apollo'\nimport {gql} from 'apollo-boost'\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\nimport SearchTracks from '../components/Track/SearchTracks'\nimport TrackList from '../components/Track/TrackList'\nimport CreateTrack from '../components/Track/CreateTrack'\nimport { CircularProgress } from \"@material-ui/core\";\nimport Error from \"../components/Shared/Error\";\n\nconst App = ({ classes }) => {\n\n  const [searchResults,setSearchResults] = useState([])\n\n  return (\n    <div className={classes.container}>\n      <SearchTracks setSearchResults={setSearchResults}/>\n      <CreateTrack/>\n      <Query query={GET_TRACKS_QUERY}>\n        {({ data,loading,error })=>{\n          if(loading) return <CircularProgress/>\n          if(error) return <Error />\n          \n          const tracks = searchResults.length>0 ? searchResults : data.tracks\n          \n          return <TrackList tracks={tracks}/>\n        }}\n      </Query>\n    </div>\n  )\n};\n\nexport const GET_TRACKS_QUERY = gql`\n  query getTracksQuery{\n    tracks{\n      id\n      title\n      description\n      url\n      likes{\n        id\n      }\n      postedBy{\n        id\n        username\n      }\n\n    }\n  }\n`\n\nconst styles = theme => ({\n  container: {\n    margin: \"0 auto\",\n    maxWidth: 960,\n    padding: theme.spacing.unit * 2\n  }\n});\n\nexport default withStyles(styles)(App);","import React from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { CircularProgress } from \"@material-ui/core\";\n// import CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst Loading = ({ classes }) =>(\n  <div className={classes.root}>\n    <CircularProgress className={classes.progress}/>\n  </div>\n);\n\nconst styles = theme => ({\n  root: {\n    width: \"100vw\",\n    textAlign: \"center\"\n  },\n  progress: {\n    margin: theme.spacing.unit * 2,\n    color: theme.palette.secondary.dark\n  }\n});\n\nexport default withStyles(styles)(Loading);\n","import React from \"react\";\nimport { Query } from 'react-apollo'\nimport { gql } from 'apollo-boost'\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUpTwoTone\";\nimport AudiotrackIcon from \"@material-ui/icons/AudiotrackTwoTone\";\nimport Divider from \"@material-ui/core/Divider\";\nimport format from 'date-fns/format'\n\nimport AudioPlayer from '../components/Shared/AudioPlayer'\nimport Error from '../components/Shared/Error'\nimport Loading from '../components/Shared/Loading'\n\nconst Profile = ({ classes,match }) => {\n  const userId = match.params.id\n\n  return (\n    <Query query={PROFILE_QUERY} variables={{userId}}>\n      {({data,loading,error})=>{\n        if(loading) return <Loading/>\n        if(error) return <Error error={error}/>\n        return(\n          <div>\n            {/* User infor card */}\n            <Card className={classes.card}>\n              <CardHeader\n                avatar={<Avatar>{data.user.username[0]}</Avatar>}\n                title={data.user.username}\n                subheader={`Joined ${format(data.user.dateJoined,'MMM Do, YYYY')}`}\n                />\n            </Card>\n\n            {/* Created Tracks  */}\n            <Paper elevation={1} className={classes.paper}>\n              <Typography variant=\"title\" className={classes.title}>\n                <AudiotrackIcon className={classes.audio}/>\n                Created Tracks\n              </Typography>\n              {data.user.trackSet.map((track,index)=>(\n                <div key={track.id}>\n                  <Typography>\n                    {track.title} · {track.likes.length} · Likes \n                    </Typography>\n                  <AudioPlayer url={track.url}/>\n                  {index < data.user.trackSet.length-1 && <Divider className={classes.divider}/>}\n                </div>\n              ))}\n            </Paper>\n            \n            {/* Liked Tracks */} \n            <Paper elevation={1} className={classes.paper}>\n              <Typography variant=\"title\" className={classes.title}>\n                <ThumbUpIcon className={classes.thumbIcon}/>\n                Liked Tracks\n              </Typography>\n              {data.user.likeSet.map(({track},index)=>(\n                <div key={track.id}>\n                  <Typography>\n                    {track.title} · {track.likes.length} · Likes · PostedBy: {track.postedBy.username}\n                  </Typography>\n                  <AudioPlayer url={track.url}/>\n                  {index < data.user.likeSet.length-1 && <Divider className={classes.divider}/>}\n                </div>\n              ))}\n            </Paper>\n          </div>\n        )\n      }}\n    </Query>\n  )\n};\n\nconst PROFILE_QUERY = gql`\nquery($userId:Int!){\n  user(id:$userId){\n    id\n    username\n    dateJoined\n    trackSet{\n      id\n      title\n      url\n      likes{\n        id\n      }\n    }\n    likeSet{\n      id\n      track{\n        id\n        title\n        url\n        likes{\n          id\n        }\n        postedBy{\n          id\n          username\n        }\n      }\n    }\n  }\n}\n`\n\nconst styles = theme => ({\n  paper: {\n    width: \"auto\",\n    display: \"block\",\n    padding: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    [theme.breakpoints.up(\"md\")]: {\n      width: 650,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  },\n  card: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  title: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing.unit * 2\n  },\n  audioIcon: {\n    color: \"purple\",\n    fontSize: 30,\n    marginRight: theme.spacing.unit\n  },\n  thumbIcon: {\n    color: \"green\",\n    marginRight: theme.spacing.unit\n  },\n  divider: {\n    marginTop: theme.spacing.unit,\n    marginBottom: theme.spacing.unit\n  }\n});\n\nexport default withStyles(styles)(Profile);\n","import React from \"react\";\nimport {ApolloConsumer} from 'react-apollo'\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport ExitToApp from \"@material-ui/icons/ExitToApp\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { ApolloClient } from \"apollo-boost\";\n\nconst Signout = ({ classes }) => {\n\n  const handleSignout=(client)=>{\n    localStorage.removeItem('authToken')\n    client.writeData({\n      data:{\n        isLoggedIn:false\n      }\n    })\n    console.log('Signed out user',client)\n  }\n\n  return (\n    <ApolloConsumer>\n      {client=>(\n        <Button onClick={()=>handleSignout(client)}>\n        <Typography variant=\"body1\"\n          className={classes.buttonText}\n          color=\"secondary\"\n          >\n          \n          Signout\n        \n        </Typography>\n        <ExitToApp className={classes.buttonIcon} color=\"secondary\"/>\n      </Button>\n      )}\n    </ApolloConsumer>\n  )\n};\n\nconst styles = {\n  root: {\n    cursor: \"pointer\",\n    display: \"flex\"\n  },\n  buttonIcon: {\n    marginLeft: \"5px\"\n  }\n};\n\nexport default withStyles(styles)(Signout);\n","import React from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport RadioIcon from \"@material-ui/icons/RadioTwoTone\";\nimport FaceIcon from \"@material-ui/icons/FaceTwoTone\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {Link} from 'react-router-dom'\n\nimport Signout from '../Auth/Signout'\n\nconst Header = ({ classes,currentUser }) => {\n  return (\n    <AppBar position=\"static\" className={classes.root}>\n      <Toolbar>\n        {/* Title / Logo */}\n        <Link to=\"/\" className={classes.grow}>\n          <RadioIcon className={classes.logo} color=\"secondary\" />\n          <Typography variant=\"headline\" color=\"secondary\" noWrap>\n            Tracks\n          </Typography>\n        </Link>\n\n        {/*Auth User info */}\n        {currentUser && (\n          <Link to={`/profile/${currentUser.id}`} className={classes.grow}>\n            <FaceIcon className={classes.faceIcon}/>\n            <Typography variant=\"headline\" className={classes.username} noWrap>\n              {currentUser.username}\n            </Typography>\n          </Link>\n        )}\n        \n        {/* Signout Button */}\n          <Signout/>\n      </Toolbar>\n    </AppBar>\n  )\n};\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    margin: 0,\n    padding: 0\n  },\n  grow: {\n    flexGrow: 1,\n    display: \"flex\",\n    alignItems: \"center\",\n    textDecoration: \"none\"\n  },\n  logo: {\n    marginRight: theme.spacing.unit,\n    fontSize: 45\n  },\n  faceIcon: {\n    marginRight: theme.spacing.unit,\n    fontSize: 30,\n    color: \"white\"\n  },\n  username: {\n    color: \"white\",\n    fontSize: 30\n  }\n});\n\nexport default withStyles(styles)(Header);\n","import React from \"react\";\n\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport withRoot from \"./withRoot\";\n\nimport {Query} from 'react-apollo'\nimport { gql } from \"apollo-boost\";\n\nimport App from './pages/App'\nimport Profile from './pages/Profile'\nimport Header from './components/Shared/Header'\nimport Loading from \"./components/Shared/Loading\";\nimport Error from './components/Shared/Error'\nimport { ProvidedRequiredArguments } from \"graphql/validation/rules/ProvidedRequiredArguments\";\n\nexport const UserContext = React.createContext()\n\nconst Root = () => (\n    <Query query={ME_QUERY} fetchPolicy='cache-and-network'>\n        {({data,loading,error})=>{\n            if(loading) return <Loading/>\n            if(error) return <Error error={error}/>\n            \n            const currentUser = data.me\n            \n            return (\n                <Router>\n                    <UserContext.Provider value={currentUser}>\n                        <Header currentUser={currentUser}/>\n                        <Switch>\n                            <Route exact path=\"/\" component={App}/>\n                            <Route path=\"/profile/:id\" component={Profile} />\n                        </Switch>\n                    </UserContext.Provider>\n                </Router>\n            )\n        }}\n    </Query>\n)\n\nexport const ME_QUERY = gql`\n        {\n            me{\n                id\n                username\n                email\n                likeSet{\n                    track{\n                        id\n                    }\n                }\n            }\n        }\n`\n// const GET_TRACKS_QUERY = gql`\n// {\n//     tracks{\n//        title\n//        id\n//        postedBy{\n//            username\n//            id\n//        } \n//     }\n// }\n// `\n\nexport default withRoot(Root);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React,{useState} from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Lock from \"@material-ui/icons/Lock\";\nimport Error from '../Shared/Error'\nimport {gql} from 'apollo-boost'\nimport {Mutation} from 'react-apollo'\n\nconst Login = ({ classes, setNewUser }) => {\n  const [username,setUsername] = useState(\"\")\n  const [password,setPassword] = useState(\"\")\n\n  const handleSubmit = async ( event,tokenAuth,client )=>{\n    event.preventDefault();\n    const res = await tokenAuth()\n\n    localStorage.setItem('authToken',res.data.tokenAuth.token)\n    client.writeData({\n      data:{\n        isLoggedIn:true\n      }\n    })\n  \n  }\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <Avatar\n         className ={classes.avatar}>\n           <Lock/>\n        </Avatar>\n        <Typography variant=\"title\">\n          Login as Existing User\n        </Typography>\n\n        <Mutation\n          mutation={LOGIN_MUTATION}\n          variables={{ username, password }}\n          >\n          {(tokenAuth,{ loading, error, called, client })=>{\n            return(\n              <form onSubmit={event => handleSubmit(event,tokenAuth, client)} className={classes.form}>\n                <FormControl margin=\"normal\" required fullWidth>\n                  <InputLabel htmlFor=\"username\">\n                    Username\n                  </InputLabel>\n                  <Input id=\"username\" onChange={event => setUsername(event.target.value)}/>\n                </FormControl>\n\n                <FormControl margin=\"normal\" required fullWidth>\n                  <InputLabel htmlFor=\"password\">\n                    Password\n                  </InputLabel>\n                  <Input id=\"password\" type=\"password\" onChange={event => setPassword(event.target.value)}/>\n                </FormControl>\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={loading || !username.trim() || !password.trim()}\n                  className={classes.submit}>\n                  { loading? \"Logging in...\": \"Login\"}\n                </Button>\n                <Button\n                  color=\"secondary\"\n                  variant=\"outlined\"\n                  fullWidth\n                  onClick={()=>setNewUser(true)}>\n                  New user? Register here\n                </Button>\n\n                {/* Error Handling */}\n                {error && <Error error={error} />}\n              </form>\n            )\n          }}\n        </Mutation>\n\n      </Paper>\n    </div>\n  )\n};\n\nconst LOGIN_MUTATION = gql`\nmutation($username:String!,$password:String!){\n  tokenAuth(username:$username,password:$password){\n    token\n  }\n}\n`\n\nconst styles = theme => ({\n  root: {\n    width: \"auto\",\n    display: \"block\",\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(\"md\")]: {\n      width: 400,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: theme.spacing.unit * 2\n  },\n  title: {\n    marginTop: theme.spacing.unit * 2,\n    color: theme.palette.secondary.main\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.primary.main\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2\n  }\n});\n\nexport default withStyles(styles)(Login);\n","import React, { useState } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Gavel from \"@material-ui/icons/Gavel\";\nimport VerifiedUserTwoTone from \"@material-ui/icons/VerifiedUserTwoTone\";\n\nimport {Mutation} from 'react-apollo'\nimport {gql} from 'apollo-boost'\n\nimport Error from '../Shared/Error'\n\nfunction Transition(props){\n  return <Slide direction=\"up\" {...props}/>\n}\n\nconst Register = ({ classes,setNewUser }) => {\n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [open,setOpen] = useState(false)\n\n  const handleSubmit = async (event,createUser)=>{\n    event.preventDefault()\n    const res = await createUser()\n  }\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <Avatar\n         className ={classes.avatar}>\n           <Gavel/>\n        </Avatar>\n        <Typography variant=\"headline\">\n          Register\n        </Typography>\n\n        <Mutation\n          mutation={REGISTER_MUTATION}\n          variables={{ username, email, password }}\n          onCompleted={   data =>{\n            console.log({data})\n            setOpen(true)\n            }}>\n          {(createUser,{ loading,error })=>{\n            return(\n              <form onSubmit={event => handleSubmit(event,createUser)} className={classes.form}>\n                <FormControl margin=\"normal\" required fullWidth>\n                  <InputLabel htmlFor=\"username\">\n                    Username\n                  </InputLabel>\n                  <Input id=\"username\" onChange={event => setUsername(event.target.value)}/>\n                </FormControl>\n\n                <FormControl margin=\"normal\" required fullWidth>\n                  <InputLabel htmlFor=\"email\">\n                    Email\n                  </InputLabel>\n                  <Input id=\"email\" type=\"email\" onChange={event => setEmail(event.target.value)}/>\n                </FormControl>\n\n                <FormControl margin=\"normal\" required fullWidth>\n                  <InputLabel htmlFor=\"password\">\n                    Password\n                  </InputLabel>\n                  <Input id=\"password\" type=\"password\" onChange={event => setPassword(event.target.value)}/>\n                </FormControl>\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  disabled={loading || !username.trim() || !email.trim() || !password.trim()}\n                  className={classes.submit}>\n                  { loading? \"Registering...\": \"Register\"}\n                </Button>\n                <Button\n                  color=\"primary\"\n                  variant=\"outlined\"\n                  fullWidth\n                  onClick={()=>setNewUser(false)}>\n                  Previous user? Log in here\n                </Button>\n\n                {/* Error Handling */}\n                {error && <Error error={error} />}\n              </form>\n            )\n          }}\n        </Mutation>\n\n      </Paper>\n\n      {/* Success Dialog */}\n      <Dialog\n        open={open}\n        disableBackdropClick = {true}\n        TransitionComponent={Transition}>\n          <DialogTitle>\n            <VerifiedUserTwoTone className={classes.icon}/>\n            New Account\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText>User successfully created!</DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={()=>setNewUser(false)}>\n                Login\n            </Button>\n          </DialogActions>\n      </Dialog>\n    </div>\n  )\n};\n\nconst REGISTER_MUTATION = gql`\nmutation($username:String!,$email:String!,$password:String!){\n  createUser(username:$username,email:$email,password:$password){\n\t\tuser{\n      username\n      email\n    }    \n  }\n}\n`\n\nconst styles = theme => ({\n  root: {\n    width: \"auto\",\n    display: \"block\",\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(\"md\")]: {\n      width: 400,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: theme.spacing.unit * 2\n  },\n  title: {\n    marginTop: theme.spacing.unit * 2,\n    color: theme.palette.openTitle\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2\n  },\n  icon: {\n    padding: \"0px 2px 2px 0px\",\n    verticalAlign: \"middle\",\n    color: \"green\"\n  }\n});\n\nexport default withStyles(styles)(Register);","import React, {useState} from \"react\";\n\nimport withRoot from \"../../withRoot\";\nimport Login from './Login'\nimport Register from './Register'\n\nconst AuthIndex = () => {\n  const [newUser, setNewUser] = useState(false)\n\n  return newUser ? <Register setNewUser={setNewUser}/> : <Login setNewUser={setNewUser}/>;\n};\n\nexport default withRoot(AuthIndex)","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Root from \"./Root\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport Auth from './components/Auth'\n\nimport {ApolloProvider, Query} from 'react-apollo'\nimport ApolloClient, {gql} from 'apollo-boost'\n\nconst client = new ApolloClient({\n    uri:'http://tracksbackend.njabulombuli.co.za/',\n    fetchOptions:{\n      credentials:\"include\"  \n    },\n    request:operation=>{\n        const token = localStorage.getItem(\"authToken\") || \"\"\n        operation.setContext({\n            headers:{\n                Authorization:`JWT ${token}`\n            }\n        })\n    },\n    clientState:{\n        defaults:{\n            isLoggedIn: !!localStorage.getItem('authToken')\n        }\n    }\n})\n\nconst IS_LOGGED_IN_QUERY = gql`\n    query{\n        isLoggedIn @client\n    }\n`\n\nReactDOM.render(\n<ApolloProvider client={client}>\n    <Query query={IS_LOGGED_IN_QUERY}>\n        {({ data }) => data.isLoggedIn? <Root/> : <Auth/>}\n    </Query>\n</ApolloProvider>, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}